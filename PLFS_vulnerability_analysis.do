version 16

************************************************************************
* TABLE OF CONTENTS
************************************************************************
*** start log 
*capture log close
*log using "path/do-filename.log", replace

* OccupationalRisk_PLFS.do

* Project: Occupational Risk
* Author: Ashwin Mb, ashwin.mb@berkeley.edu
* Date Created: June 15 2020
* Last modified: Aug 20 2020
* Data In: PLFS_long4.dta
* Data Out: PLFS_workplace_raw.csv; PLFS_SocialBenefits_raw.csv; 
*			PLFS_SocialBenefits_raw.csv; PLFS_ContractType_raw; 
*			PLFS_PaidLeaves_raw; PLFS_MedianIncome.xlsx; 
*			PLFS_MedianIncome_RuralRegion.xlsx; 
*			PLFS_MedianIncome_UrbanRegion.xlsx; 

* Purpose of do-file: There are two: first, run the aggregate numbers and 
*			compare with the PLFS report and another analysis (Part 1, 4 & 5). 
*			Second, analyze median incomes and social security provisions for 
*			113 occupations, and distribution of workers across 
*			the same in India. 
/*
	Outline
	PART 0: SETTING UP ALL THE VARIABLES & LABELS
	PART 1: COMPARING AGGREGATE STATS WITH THE REPORT
	Part 2: DATA ANALYSIS AT OCCUPATION LEVEL
	Part 3: DATA ANALYSIS FOR OCCUPATIONS ACROSS REGIONS (URBAN/ RURAL)
	PART 4: COMPARING AVERAGE INCOME WITH THE REPORT
	PART 5: COMPARING MEDIAN INCOME WITH ANOTHER ANALYSIS
	PART 6: MEDIAN MONTHLY SALARY BY OCCUPATION
	PART 7: SOCIAL SECURITY INDEX 
*/
************************************************************************
* PART 0: SETTING UP ALL THE VARIABLES & LABELS
************************************************************************
set more off 

* Setting file path
global DataDir "/Users/ashwinmb/Desktop/IDFC/Data_Team/Occupational Risk/PLFS/data/"

* Opening the main input file - PLFS dataset
use "$DataDir/dtafiles/PLFS_long4.dta", clear

* Labelling the sector 
label variable sector "Rural = 1; Urban = 2"

** Tagging Occupation by main division 
gen p_occucode_nco_main = . 
replace p_occucode_nco_main = p_occucode_nco/100
replace p_occucode_nco_main = round(p_occucode_nco_main,1)

* Naming data labels
label variable p_occucode_nco_main "Occupation Division"

label define division 1	"Legislators, Senior Officials and Managers" ///
	2 "Professionals" 3 "Technicians and Associate Professionals" 4 "Clerks" ///
	5 "Service Workers and Shop & Market Sales Workers" ///
	6 "Skilled Agricultural and Fishery Workers" ///
	7 "Craft and related Trades Workers" ///
	8 "Plant and Machine Operators and Assemblers" 9 "Elementary Occupations"

label values p_occucode_nco_main division

/* Tagging rural and urban workplace -- rural and urban workplaces are named 
	based on p_workloc (rural, urban). For workloc = others, tagged based on the 
	region (where the individual resides) */

gen region_workplace = . 
replace region_workplace = 1 if p_workloc <=19 
replace region_workplace = 2 if p_workloc > 19 & p_workloc <=29 
replace region_workplace = sector if p_workloc == 99 

label variable region_workplace "Workplace location: Rural location = 1; Urban Location = 2"

************************************************************************
* PART 1: COMPARING AGGREGATE STATS WITH THE REPORT
************************************************************************
** We compare the aggregate statistics for key metrics with the PLFS 17-18 report 
* Link to the PLFS 2017-18 report: http://www.mospi.gov.in/sites/default/files/publication_reports/Annual%20Report%2C%20PLFS%202017-18_31052019.pdf

** Reading the survey data
* primary sampling unit (PSU) = 1st stage - state; 2nd - region; 3rd - district; 4th - fsu
* sampling weights for households = hmult 
* sample weights for individuals = pmult

** Initializing svy command
svyset state [pweight=hmult], vce(linearized) singleunit(missing) || region || district || fsu || hhid
svydescribe

* Perc of population in urban and rural regions [Comment: same as the report]
svy: tab sector if v == 1 // rural = 70.69; urban = 29.31

* Sex ratio by region [Comment: same as the report]
svy: tab sex if sector == 1 // 51.22% male which is 952 per 1000 males
svy: tab sex if sector == 2 & v == 1  // 50.89% which is 965 per 1000 males

* Literacy rates by region [Comment: same as the report]
gen literate = 1 if gedu !=1 
replace literate = 0 if literate == . 
svy: tab literate if sector == 1 & age >= 7 // 72.75 vs 72.8 in report

** Labour Force 
* Comparing WPR according to usual status (ps + ss) by region, sex [Comment: within 0.5%]
* WPR = worker population ratio = % of people employed = number employed/ total population
gen working_ps = 1 if p_statuscode <=72
replace working_ps = 0 if working == . 
svy: tab working_ps if sex == 1 & sector == 1 //rural, male
svy: tab working_ps if sex == 2 & sector == 1 //rural, female
svy: tab working_ps if sex == 1 & sector == 2 & v == 1 //urban, male
svy: tab working_ps if sex == 2 & sector == 2 & v == 1 //urban, female

* Comparing WPR according to cws by region, sex [Comment: within 0.5%]
* WPR = worker population ratio = % of people employed = number employed/ total population
gen working_cws = 1 if cws <=72
replace  working_cws = 0 if working_cws == . 
svy: tab  working_cws if sex == 1 & sector == 1 //rural, male
svy: tab  working_cws if sex == 2 & sector == 1 //rural, female
svy: tab  working_cws if sex == 1 & sector == 2 & v == 1 //urban, male
svy: tab  working_cws if sex == 2 & sector == 2 & v == 1 //urban, female

* Comparing LFPR according to usual status (ps + ss) by region, sex [Comment: within 0.5%]
* Labour Force participation rate = LFPR = no. employed + no. unemployed / total
gen lfpr_ps = 1 if p_statuscode <=82
replace lfpr_ps = 0 if lfpr_ps == . 
svy: tab  lfpr_ps if sex == 1 & sector == 1 //rural, male
svy: tab  lfpr_ps if sex == 2 & sector == 1 //rural, female
svy: tab  lfpr_ps if sex == 1 & sector == 2 & v == 1 //urban, male
svy: tab  lfpr_ps if sex == 2 & sector == 2 & v == 1 //urban, female

* Comparing LFPR according to usual status (ps + ss) for randomly choosen two states by region, sex [Comment: within 0.5%]
* Labour Force participation rate = LFPR = no. employed + no. unemployed / total
svy: tab lfpr_ps if sex == 1 & sector == 1 & state == 28 // for Andhra Pradesh
svy: tab lfpr_ps if sex == 2 & sector == 2 & v == 1 & state == 31 // for Lakshwadeep

* Comparing occupational level data based on NCO-2004 [Comment: same as the report]
svy: tab p_occucode_nco if sex == 1 & sector == 1 & v == 1, nolabel // rural, male, 
svy: tab p_occucode_nco, nolabel 

************************************************************************
* PART 2: DATA ANALYSIS AT OCCUPATION LEVEL
************************************************************************
** Setting up svy at individual level 
svyset state [pweight=pmult], vce(linearized) singleunit(missing) || region || district || fsu || hhid

* Calculating share of different social benefits for each occupation
svy: tab p_occucode_nco p_socsec if p_occucode_nco < 500, row nolabel
svy: tab p_occucode_nco p_socsec if p_occucode_nco >= 500, row nolabel

* Calculating share of different contract-types for each occupation
svy: tab p_occucode_nco p_jobcontract, row nolabel 

* Calculating whether workers are eligible for paid-leaves for each occupation
svy: tab p_occucode_nco p_paidleave, row nolabel 

************************************************************************
* PART 3: DATA ANALYSIS FOR OCCUPATIONS ACROSS REGIONS (URBAN/ RURAL)
************************************************************************

* Saving data into excel
ssc install estout

* Setting up svy at individual level 
svyset state [pweight=pmult], vce(linearized) singleunit(missing) || region || district || fsu || hhid

*** FIGURE 1 ***
** Calculating share of workers in different occupational division for rural and urban sector separately 
estpost svy: tab p_occucode_nco_main if sector == 1 & v == 1 
esttab . using "$DataDir/csvfiles/PLFS_occupation_division_raw.csv", b(4) se(2) nostar unstack plain mtitle(`e(colvar)') append 

estpost svy: tab p_occucode_nco_main if sector == 2 & v == 1 
esttab . using "$DataDir/csvfiles/PLFS_occupation_division_raw.csv", b(4) se(2) nostar unstack plain mtitle(`e(colvar)') append 

*** FIGURE 2 & 3 ***
* Calculating share of workers in different occupations across sectors
estpost svy: tab p_occucode_nco sector, column nolabel
esttab . using "$DataDir/csvfiles/PLFS_workplace_raw.csv", b(4) se(2) nostar unstack plain mtitle(`e(colvar)') append 

*** Calculating share of different social benefits for each occupation for urban and rural sector ***
* Saving the output into csv file 
* Splitting the data into two parts - p_occucode_nco < 500 & p_occucode_nco >= 500
foreach i in 1 2{
estpost svy: tab p_occucode_nco p_socsec if region_workplace == `i' & v == 1 & p_occucode_nco < 500, row nolabel
esttab . using "$DataDir/csvfiles/PLFS_SocialBenefits_raw.csv", b(4) se(2) nostar unstack plain mtitle(`e(colvar)') append 
}

foreach i in 1 2{
estpost svy: tab p_occucode_nco p_socsec if region_workplace == `i' & v == 1 & p_occucode_nco >= 500, row nolabel
esttab . using "$DataDir/csvfiles/PLFS_SocialBenefits_raw.csv", b(4) se(2) nostar unstack plain mtitle(`e(colvar)') append 
}

* Calculating share of workers in different contract-types for each occupation for urban and rural sector
* Saving the output into csv file 
foreach i in 1 2{
estpost svy: tab p_occucode_nco p_jobcontract if region_workplace == `i' & v == 1, row nolabel
esttab . using "$DataDir/csvfiles/PLFS_ContractType_raw.csv", b(4) se(2) nostar unstack plain mtitle(`e(colvar)') append 
}

* Calculating whether workers are eligible for paid-leaves for each occupation for urban and rural sector
* Saving the output into csv file 
foreach i in 1 2{
estpost svy: tab p_occucode_nco p_paidleave if region_workplace == `i' & v == 1, row nolabel
esttab . using "$DataDir/csvfiles/PLFS_PaidLeaves_raw.csv", b(4) se(2) nostar unstack plain mtitle(`e(colvar)') append 
}


************************************************************************
* PART 4: COMPARING AVERAGE INCOME WITH THE REPORT
************************************************************************

* Setting up svy at individual level 
svyset state [pweight=pmult], vce(linearized) singleunit(missing) || region || district || fsu || hhid

* Calculating average income for Regular Wage/ Salaried workers(Comment: Same as the report)
svyset state [pweight=pmult], vce(linearized) singleunit(missing) || region || district || fsu || hhid
svy: mean a1_regwage if cws == 31 & sector == 1  & sex == 1 // regular wage/salaried, rural, male
svy: mean a1_regwage if cws == 31 & sector == 1  & sex == 2 // regular wage/salaried,, rural, female
svy: mean a1_regwage if cws == 31 & sector == 2  & sex == 1 // regular wage/salaried,, urban, male
svy: mean a1_regwage if cws == 31 & sector == 2  & sex == 2 // regular wage/salaried,, urban, female

* Calculating average income for Self-employed (Comment: Same as the report)
svy: mean a2_regwage if ((cws == 11 | cws == 12) & sector == 1  & sex == 1) // self employed, rural, male
svy: mean a2_regwage if ((cws == 11 | cws == 12) & sector == 1  & sex == 2) // self employed, rural, female
svy: mean a2_regwage if ((cws == 11 | cws == 12) & sector == 2  & sex == 1 & v == 1) // self employed, rural, male
svy: mean a2_regwage if ((cws == 11 | cws == 12) & sector == 2  & sex == 2 & v == 1 ) // self employed, rural, female

* Creating variable to capture average income for Casual workers 
* Calculate salary by adding 7-day daily income
gen a1_total_earnings = 0
forval i = 1/7{
replace a1_total_earnings = a1_wage_`i'd + a1_total_earnings 
}

* Number of days employed in the week 
gen employed_days = 0 
forval i = 1/7{
replace employed_days = employed_days + 1 if a1_wage_`i'd != 0
}
label variable employed_days "Number of days casual workers are employed in a week"

** Calculating the average daily salary
* Salary per day = salary for the seven days divided by number of days employed
gen a1_total_earnings_daily = a1_total_earnings/employed_days
replace a1_total_earnings_daily = 0 if a1_total_earnings_daily == . 
label variable a1_total_earnings_daily "Earnings per day for casual workers"

* Calculating average daily income for casual labours (Comment: Same as the report)
svy: mean a1_total_earnings_daily if cws == 42 & sector == 1  & sex == 1 // casual labour in MNREGA, rural, male
svy: mean a1_total_earnings_daily if cws == 42 & sector == 1  & sex == 2 // casual labour in MNREGA, rural, female

svy: mean a1_total_earnings_daily if cws == 51 & sector == 1  & sex == 1 // casual labour other than public works, rural, male
svy: mean a1_total_earnings_daily if cws == 51 & sector == 1  & sex == 2 // casual labour other than public works, rural, male
svy: mean a1_total_earnings_daily if cws == 51 & sector == 2  & sex == 1 // casual labour other than public works, urban, male
svy: mean a1_total_earnings_daily if cws == 51 & sector == 2  & sex == 2 // casual labour other than public works, urban, male

svy: mean a1_total_earnings_daily if cws == 41 & sector == 1  & sex == 1 // casual labour other than public works, rural, male
svy: mean a1_total_earnings_daily if cws == 41 & sector == 1  & sex == 2 // casual labour other than public works, rural, female
svy: mean a1_total_earnings_daily if cws == 41 & sector == 2  & sex == 1 // casual labour other than public works, urban, male
svy: mean a1_total_earnings_daily if cws == 41 & sector == 2  & sex == 2 // casual labour other than public works, urban, female


************************************************************************
* PART 5: COMPARING MEDIAN INCOME WITH ANOTHER ANALYSIS
************************************************************************

* Setting up svy at individual level 
svyset state [pweight=pmult], vce(linearized) singleunit(missing) || region || district || fsu || hhid

* Checking median value for incomes with this analysis: https://www.livemint.com/politics/policy/most-regular-jobs-in-india-don-t-pay-well-plfs-1565075309032.html

* epctile gives median values with svy command
* Overall median salary for all regular workers (comment: numbers match)
epctile a1_regwage, p(50) subpop(if cws == 31) svy // all regular workers 10k

* Daily median income for casual and salaried workers (Comment: Numbers match)
epctile a1_total_earnings_daily, p(50) subpop(if cws == 42 & sector == 1) svy
epctile a1_total_earnings_daily, p(50) subpop(if cws == 51 & sector == 1) svy
epctile a1_regwage, p(50) subpop(if cws == 31 & sector == 2) svy // divide by 30

* Daily median income for self-employed workers (Comment: Numbers don't match)
epctile a2_regwage, p(50) subpop(if (cws == 11 | cws == 12) & sector == 1) svy // divide by 30 
epctile a2_regwage, p(50) subpop(if (cws == 11 | cws == 12) & sector == 2) svy // divide by 30

* Overall median salary for regular workers (comment: numbers match)
epctile a1_regwage, p(50) subpop(if p_occucode_nco_main == 1 & cws == 31) svy // division 1, 25k 
epctile a1_regwage, p(50) subpop(if p_occucode_nco_main == 2 & cws == 31) svy // division 2, 20k
epctile a1_regwage, p(50) subpop(if p_occucode_nco_main == 3 & cws == 31) svy // division 3, 15k
epctile a1_regwage, p(50) subpop(if p_occucode_nco_main == 4 & cws == 31) svy // division 4, 15k
epctile a1_regwage, p(50) subpop(if p_occucode_nco_main == 5 & cws == 31) svy // division 5, 8k 
epctile a1_regwage, p(50) subpop(if p_occucode_nco_main == 6 & cws == 31) svy // division 6, 7k
epctile a1_regwage, p(50) subpop(if p_occucode_nco_main == 7 & cws == 31) svy // division 7, 9k
epctile a1_regwage, p(50) subpop(if p_occucode_nco_main == 8 & cws == 31) svy // division 8, 10k
epctile a1_regwage, p(50) subpop(if p_occucode_nco_main == 9 & cws == 31) svy // division 9, 7k

************************************************************************
* PART 6: MEDIAN MONTHLY SALARY BY OCCUPATION  
************************************************************************

* Setting up svy at individual level 
svyset state [pweight=pmult], vce(linearized) singleunit(missing) || region || district || fsu || hhid

* Checking if an individual has multiple sources of income 
gen temp_1 = 1 if a1_regwage !=0 
gen temp_2 = 1 if a2_regwage !=0
gen temp_3 = 1 if a1_total_earnings_daily !=.
egen temp_4 = rowtotal(temp_1 temp_2 temp_3)
tab temp_4 // hardly .04% of them have mutltiple sources of income 
drop temp_* 

* Convert daily salary to monthly salary for casual workers 
* Calculating average number of days a casual workers is employed
bysort p_occucode_nco region_workplace: egen days_worked = mean(employed_days) if cws == 41 | cws == 42 | cws == 51
replace days_worked = days_worked*30/7  // daily salary for casual workers
label variable days_worked "Number of days worked by a casual workers in a week by occupation and regions(U/R)"

* Calculating monthly salary for the casual worker
gen a3_regwage = days_worked*a1_total_earnings_daily 
replace a3_regwage = 0 if a3_regwage == . 

* Creating new variable that captures salary for all types of workers (salaried, self-employed, casual)
gen monthly_salary = a1_regwage + a2_regwage + a3_regwage

* Overall median salary for each occupation
egen group = group(p_occucode_nco)
su group, meanonly

** Saving PLFS Median Income data by occupation 
putexcel set "$DataDir/excelfiles/PLFS_MedianIncome.xlsx", replace
forval i = 1/116{
capture noisily epctile monthly_salary, p(50) subpop(if group == `i') svy
putexcel A`i' = `i'
putexcel B`i' = matrix(e(b))
}
drop group

*** Median Income for rural and urban regions ***
* Overall median income by region (comment: urban higher than rural)
epctile monthly_salary, p(50) subpop(if region_workplace == 1 ) svy // 6.3k
epctile monthly_salary, p(50) subpop(if region_workplace == 2 ) svy // 7.1k 

* Median Income for each occupation split by rural and urban regions

egen group_1 = group(p_occucode_nco) if sector == 1 
su group_1, meanonly
putexcel set "$DataDir/excelfiles/PLFS_MedianIncome_RuralRegion.xlsx", replace
forval i = 1/116{
capture noisily epctile monthly_salary, p(50) subpop(if group_1 == `i' & sector == 1 ) svy
putexcel A`i' = `i'
putexcel B`i' = matrix(e(b))
putexcel C`i' = matrix(e(N))
}
drop group_1

egen group_2 = group(p_occucode_nco) if sector == 2 
su group_2, meanonly
putexcel set "$DataDir/excelfiles/PLFS_MedianIncome_UrbanRegion.xlsx", replace
forval i = 1/116{
capture noisily epctile monthly_salary, p(50) subpop(if group_2 == `i' & sector == 2 ) svy
putexcel A`i' = `i'
putexcel B`i' = matrix(e(b))
putexcel C`i' = matrix(e(N))
}
drop group_2

* Note: Salary for some occupations gives error because they don't have sufficient data points
* Manually removed median income for occupations less than N <25

************************************************************************
* PART 7: SOCIAL SECURITY INDEX 
************************************************************************

* Setting up svy at individual level 
svyset state [pweight=pmult], vce(linearized) singleunit(missing) || region || district || fsu || hhid

* Individuals not eligible for any benefits 
gen ss_index = 0 if p_jobcontract == 1 & p_paidleave == 2 & p_socsec == 8 
replace ss_index = 1 if p_jobcontract != . & p_paidleave != . & p_socsec != . & ss_index != 0
label variable ss_index "Not eligible for any benefits = 0 ; Eligible for at least one benefit = 1"
label define socialindex 0 "Not eligible for any benefits" 1 "Eligible for at least one benefit" 
label values ss_index socialindex 

estpost svy: tab p_occucode_nco ss_index if sector == 1 & v == 1, row nolabel // rural and first visit 
esttab . using "$DataDir/csvfiles/PLFS_ssi_rural_raw.csv", b(4) se(2) nostar unstack plain mtitle(`e(colvar)') append 

estpost svy: tab p_occucode_nco ss_index if sector == 2 & v == 1, row nolabel // urban and first visit
esttab . using "$DataDir/csvfiles/PLFS_ssi_urban_raw.csv", b(4) se(2) nostar unstack plain mtitle(`e(colvar)') append 

* Perc of rural workers not eligible for social security provisions 
svy: tab ss_index if sector == 1 & v == 1 // 62.7% not eligible 
svy: tab ss_index if sector == 2 & v == 1 // 49.7 not eligible

************************************************************************
* APPENDIX [ADDITIONAL CODES NOT USED IN THE ANALYSIS]
************************************************************************
/*
* Calculating share of workers in each occupation for rural sector <Not used in the analysis>
forval i = 1/10{
display `i'
estpost svy: tab p_occucode_nco p_workloc if p_occucode_nco_main == `i' & region_workplace == 1 , row nolabel // rural region, 
esttab . using "$DataDir/csvfiles/PLFS_workloc_raw.csv", b(4) se(2) nostar unstack plain mtitle(`e(colvar)') append 
}

* Calculating share of workers in each occupation for urban sector <Not used in the analysis>
forval i = 1/10{
display `i'
estpost svy: tab p_occucode_nco p_workloc if p_occucode_nco_main == `i' & region_workplace == 2 & v == 1, row nolabel // rural region, 
esttab . using "$DataDir/csvfiles/PLFS_workloc_raw.csv", b(4) se(2) nostar unstack plain mtitle(`e(colvar)') append 
}

** Median Income for each occupation split by rural and urban workplace
egen group_1 = group(p_occucode_nco) if region_workplace == 1 
su group_1, meanonly

putexcel set "$DataDir/excelfiles/PLFS_MedianIncome_Rural.xlsx", replace
forval i = 1/116{
capture noisily epctile monthly_salary, p(50) subpop(if group_1 == `i' & region_workplace == 1 ) svy
putexcel A`i' = `i'
putexcel B`i' = matrix(e(b))
}
drop group_1


egen group_2 = group(p_occucode_nco) if region_workplace == 2 
su group_2, meanonly

putexcel set "$DataDir/excelfiles/PLFS_MedianIncome_Urban.xlsx", replace
forval i = 1/116{
capture noisily epctile monthly_salary, p(50) subpop(if group_2 == `i' & region_workplace == 2 ) svy
putexcel A`i' = `i'
putexcel B`i' = matrix(e(b))
}
drop group_2 
*/
